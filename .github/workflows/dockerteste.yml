name: Docker CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  # Copila todos os Dockerfiles e checa o tamanho da imagem
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # Somente nome, ex: <nome>.Dockerfile
        # dockerfile: [arduino-esp8266, platformio, testes ]
        dockerfile: [ testes ]

    steps:
    - uses: actions/checkout@v2

    - name: Build the Docker image
      run: docker build . --file ${{ matrix.dockerfile }}.Dockerfile --tag ${{ matrix.dockerfile }}:latest

    - name: Print Docker image size
      run: docker images | grep "${{ matrix.dockerfile }}"

    - name: Salvar no log o tamanho da imagem
      run: |
        mkdir -p artifacts/logs
        echo $(docker images | grep "${{ matrix.dockerfile }}") >> artifacts/logs/image-size.txt

    - uses: actions/upload-artifact@v1
      with:
        name: logs
        path: artifacts

  print-artifacts:
    name: Imprimir Logs
    needs: [ build ]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    
    - name: nome
      run: |
        sudo apt install tree -y
        pwd
        ls
        tree

    - uses: actions/download-artifact@v1
      with:
        name: logs
        path: artifacts
    
    - name: ler log
      run: |
        # ls
        tree
        cat artifacts/logs/image-size.txt

    # Modelo de print-artifacts
    # print-artifacts:
    # name: Imprime Logs
    # runs-on: ubuntu-latest

    # steps:
    # - uses: actions/checkout@v2
    # - run: pwd && ls
    # - uses: actions/download-artifact@v1
    #   with:
    #     name: logs
    #     path: artifacts
    # - run: ls